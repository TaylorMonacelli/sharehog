auto_cancellation: false
env:
  PATH: ${HOME}/.local/bin:${PATH}
  PIP_CACHE: ${HOME}/.cache/pip
  LC_ALL: C.UTF-8
  LANG: C.UTF-8
  COVERAGE: false
  CI_NAME: cirrus-ci
  CI_BRANCH: ${CIRRUS_BRANCH}
  CI_PULL_REQUEST: ${CIRRUS_PR}
  CI_BUILD_NUMBER: ${CIRRUS_BUILD_ID}
  CI_BUILD_URL: https://cirrus-ci.com/build/${CIRRUS_BUILD_ID}
.clone_script: |
  if [ -z "$CIRRUS_PR" ]; then
    git clone --recursive --branch=$CIRRUS_BRANCH https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
    git reset --hard $CIRRUS_CHANGE_IN_REPO
  else
    git clone --recursive https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
    git fetch origin pull/$CIRRUS_PR/head:pull/$CIRRUS_PR
    git reset --hard $CIRRUS_CHANGE_IN_REPO
  fi
linux_mac_task:
  clone_script: |
    if [ -z "$CIRRUS_PR" ]; then
      git clone --recursive --branch=$CIRRUS_BRANCH https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
      git reset --hard $CIRRUS_CHANGE_IN_REPO
    else
      git clone --recursive https://x-access-token:${CIRRUS_REPO_CLONE_TOKEN}@github.com/${CIRRUS_REPO_FULL_NAME}.git $CIRRUS_WORKING_DIR
      git fetch origin pull/$CIRRUS_PR/head:pull/$CIRRUS_PR
      git reset --hard $CIRRUS_CHANGE_IN_REPO
    fi
  matrix:
  - name: test (Linux - 3.9)
    container:
      image: python:3.9-buster
    additional_containers:
    - name: mosquitto
      image: docker.io/library/eclipse-mosquitto:latest
      port: 1883
    test_task:
      pip_cache:
        folder: ~/.cache/pip
        fingerprint_script: echo $PYTHON_VERSION && cat requirements.txt
        populate_script: pip install -r requirements.txt
      test_script: pytest
    pip_cache:
      folder: $PIP_CACHE
    tox_install_script:
    - python -m pip install --upgrade pip setuptools tox
    prepare_script:
    - git config --global user.email "you@example.com"
    - git config --global user.name "Your Name"
    - apt-get update
    - apt-get -y install mosquitto-clients lsof
    clean_workspace_script:
    - rm -rf .coverage junit-*.xml .tox
    build_script:
    - python -m tox -e build
    test_script:
    - python -m tox -- -rfEx --durations 10 --color yes
    - lsof -i
    - mosquitto_pub -h 127.0.0.1 -t /world -m hello -p 1883
